//основные методы для работы с масивами
//напомню это структура элементов которые рассположены по порядку


const arr = [1, 2, 3, 6, 8];

/* arr.pop(); //метод удаляет последний эллемент с масива
arr.push(10); // добавляет єлемент в конец масива
console.log(arr); */
// добавлять/удалять эллементы в начлале  плохая практика  так меняется порядковй номер всех массивов

//перебор массива конструкция просто выведет все элементы
for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
}


//есть еще такая конструкция  for off такой же результат
//данная конструкция не работает с объектами
//value может быть рандомным названием
const arr = [1, 2, 3, 6, 8];
for (let value of arr){
    console.log(value);
}


//свойство lenght
//как соотносится свойство ленгх с порядковыми номерами - ленгх выдает +1 всегда

const arr = [1, 2, 3, 6, 8];
console.log(arr.length);

//проговорим нарушения
const arr = [1, 2, 3, 6, 8];
arr[99] = 0; //записали на 99 позицию какой то эллемент
console.log(arr.length); //покажет как работает свойство легнг последний индекс +1 покажет 100 элементов
console.log(arr);

//метод массива который используется больше всего в коде foreach метод это на самом деле функция которая принмает в себя еще одну функцию колл бек функцию
// эта функция будет выполняться для каждого элемента массива
//тоесть он приходится по всему элементу и приминяется к каждому
//она в себе может содержать три аргумента
//1 сообственно сам эллемент
//2  номер по порядку
//3  ссылка на масив которые перебираем

const arr = [1, 2, 3, 6, 8];
arr.forEach(function(item, i, arr){ 
console.log(`${i}: ${item} внутри массива ${arr}`);
});

//логический вопрос когда что использовать
//обычно используют forEach но для метода for of можно использовать брейк и контиум удобно когда нужно остановить

//у массивов есть еще пару основных методов они же трансформация
//методы map вернет новый массив
//метод фильтр модифицирует массив например оставить только четные числа и тип данных только строка

//задание например мы от пользователя получили данные
//и тепреь нужно все сохранить по порядку

const srt = prompt("","");
const products = str.split(",") // метод сплит сохранит джанные в массив
console.log(products);


const srt = prompt("","");
const products = str.split(",") // метод сплит сохранит джанные в массив
console.log(products.join(';')); // обратно вернет все в строку


//МЕТОД СОРТИРОВКИ sort
const srt = prompt("","");
const products = str.split(",") 
products.sort(); // сортирует по алфавиту(как строки) для цифр нужно иначе
console.log(products.join(';'));


//для цифр отсортирует как строки по первым цифрам
const arr = [101, 20, 3543, 6654, 81, 5];
arr.sort();
console.log(arr);
// отсортирует цифры
// это работает так потому что метод сорт содержит в себе алгоритм быстрой сортировки
const arr = [101, 20, 3543, 6654, 81, 5];
arr.sort(compareNum);
console.log(arr);

function compareNum(a,b) {
    return a - b;
}


//ПСЕВДО МАСИВЫ
// когда работаем с элементами на странице получаем по факту псевдомасивы 
//по факту это такой объект который совпадает со структурой массива он будет выглять как массив
//но у таких массивов не будет методов, тоесть это просто структура которая хранит данные по порядку
