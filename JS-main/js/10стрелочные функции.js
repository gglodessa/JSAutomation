"use strict";
// если говорить просто функции это наши действия в джава скрипте
// они используют различные типы данных и изменяют информацию так как мы ей укажем
//функцию можно представить как калькулятор


//класификация функций есть таблица к урокам. 3 типа:

// 1)Function declaration что прошли класический(есть одна особеность она существует еще до того как код запустится)
//исходя из примера ниже функция кальк будет работать даже если примеры написать выше нее
//негласное правило - функцию нужно называть глаголом с препиской того над чем выполняется действие 

function showFirstMessage () {   // () -аргументы функции / внутри {} выполняются действия
 console.log("Hello world");
}

showFirstMessage(); //вызвать функцию

let num = 20 // глобальная переменная переменная которая создана в не функции

function showFirstMessage (text) {   // аргументов может быть много
    console.log(text);
  // let num = 10; // локальная переменная видна только внутри функции
     num = 10;  // обращается к глобальной переменной и изменяет её 
   console.log(num);
   }
   
   showFirstMessage("Hello world");
   console.log(num); //обращается к глобальной переменной

   // что такое замыкание функци: когда внутри какой-то функции есть обращение к какой-то пременной она сначало ищет внутри себя и в случае
   // если не нашла идет на уровень выше(к глобальной) .Идёт до самого высшего уровня что ей доступны 
   //По простому - замыкание функции это сама функция вместе совсеми внешними переменными которые ей доступны

//фуекция с return 

   function calc(a, b) {
      return (a + b); // по простому эта функция вернет нам сумму первого аргумента и второго
    // console.log('dwed'); данный код будет мертвый после return мы ничего не задаём
   }

   console.log(calc(4, 3));
   console.log(calc(5, 6));
   console.log(calc(10, 6));

   // выполнение return внутри функции тоесть во внешний мир вернет значение которое будет выполняться внутри(там может быть код)
    function ret () {
       let num = 50;
       num = 50/2;
       return num;
   }

   const anotherNum = ret();
   console.log(anotherNum);



   // 2)Function expression  сначало нужно объявить переменную. Главное отличие от класической что она создается только тогда когда до нее доходит
   // поток кода и ее можно вызвать только после объявления. Работает как и переменная 
// с ней не можем сделать так как и с  Function declaration  пример поставить    console.log(calc(4, 3)); выше самой функции кальк

   const logger = function() {
       console.log(Hello);

   }; //обратить внимание на точку с запятой тут ставим обязательно

logger();

// 3) Стрелочная функци - данная функция имеет одну особенность она не имеет своего контекста вызова 

const calc = (a, b) => a + b; // сокращенный вариант

const calc = (a, b) => { return a + b }; // записываем действие

console.log(calc(4, 3));
console.log(calc(5, 6));
console.log(calc(10, 6));


//функция одна из основ всех программ